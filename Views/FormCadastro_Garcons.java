package Views;


import Model.Users;
import Model.UsersDAO;
import Utils.CONSTANTES;
import java.sql.SQLException;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author batman
 */



public class FormCadastro_Garcons extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastroMesa
     */
    DefaultListModel lstModel;
    String Usuario_Sucesso, Usuario_Duplicado, Erro_add_Garc, Formulario_Principal;
    String DESEJA_EXCLUIR, ALTERAR_CADASTRO, ERRO_AT_TABLE;

    public FormCadastro_Garcons(String Idioma, String Pais) throws Exception {
        lstModel = new DefaultListModel();
        initComponents();
        Load();
        Translate(Idioma, Pais);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNome = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        lblCadGarcon = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblListaGarc = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGarcons = new javax.swing.JTable();
        btnExcluir = new javax.swing.JButton();
        lblCPF = new javax.swing.JLabel();
        btnAlter = new javax.swing.JButton();
        txtCpf = new javax.swing.JFormattedTextField();
        lblCPF1 = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 36, 280, -1));

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Add-user-icon.png"))); // NOI18N
        btnAdd.setText("Adicionar");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 110, -1));

        lblCadGarcon.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
        lblCadGarcon.setForeground(new java.awt.Color(255, 250, 250));
        lblCadGarcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCadGarcon.setText("Cadastro de Garçons");
        getContentPane().add(lblCadGarcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 12, 395, 18));

        lblNome.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lblNome.setForeground(new java.awt.Color(254, 247, 247));
        lblNome.setText("Nome");
        getContentPane().add(lblNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 36, 90, 28));

        lblListaGarc.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
        lblListaGarc.setForeground(new java.awt.Color(253, 251, 251));
        lblListaGarc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblListaGarc.setText("Lista de Garçons");
        getContentPane().add(lblListaGarc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 212, 380, 18));

        tblGarcons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "COD", "NOME", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGarcons.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGarconsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblGarcons);
        if (tblGarcons.getColumnModel().getColumnCount() > 0) {
            tblGarcons.getColumnModel().getColumn(0).setMinWidth(50);
            tblGarcons.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblGarcons.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 242, 380, 126));

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Delete-user-icon.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 150, 112, -1));

        lblCPF.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lblCPF.setForeground(new java.awt.Color(254, 247, 247));
        lblCPF.setText("CPF");
        getContentPane().add(lblCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 90, 28));

        btnAlter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pencil.png"))); // NOI18N
        btnAlter.setText("Alterar");
        btnAlter.setEnabled(false);
        btnAlter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterActionPerformed(evt);
            }
        });
        getContentPane().add(btnAlter, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 123, -1));

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(txtCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 70, 280, -1));

        lblCPF1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lblCPF1.setForeground(new java.awt.Color(254, 247, 247));
        lblCPF1.setText("Senha");
        getContentPane().add(lblCPF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 104, 90, 28));
        getContentPane().add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 104, 280, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/resize-img.php.jpeg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, -2, 390, 380));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {

            Users user = new Users();
            UsersDAO uDAO = new UsersDAO();

            if (!uDAO.DuplicatedEntity(txtNome.getText())) {
                user.setNome(txtNome.getText());
                user.setSenha(String.valueOf(txtPass.getPassword()));
                user.setCPF(txtCpf.getText());
                user.setCargo(2);
                uDAO.addEntity(user);

                JOptionPane.showMessageDialog(this, Usuario_Sucesso);
            } else {
                JOptionPane.showMessageDialog(this, Usuario_Duplicado);
            }

            Load();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, Erro_add_Garc +"\n" + e.getMessage(),
                    Formulario_Principal, JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int i = JOptionPane.showConfirmDialog(rootPane, DESEJA_EXCLUIR ); 
        if (i == 0) {

            try {

                UsersDAO gDAO = new UsersDAO();
                int numero = (int) tblGarcons.getValueAt(tblGarcons.getSelectedRow(), 0);
                gDAO.removeEntity(gDAO.getEntityById(numero));
                Load();

            } catch (Exception ex) {
                Logger.getLogger(FormCadastro_Garcons.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                Load();
            } catch (Exception ex) {
                Logger.getLogger(FormCadastro_Garcons.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnExcluirActionPerformed

    private void tblGarconsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGarconsMouseClicked
        try {
            UsersDAO uDAO = new UsersDAO();
            Users user;
            btnExcluir.setEnabled(true);
            btnAlter.setEnabled(true);
            btnAdd.setEnabled(false);
            user = uDAO.getEntityById((int) tblGarcons.getValueAt(tblGarcons.getSelectedRow(), 0));
            MoverTable(user);
        } catch (Exception ex) {
            Logger.getLogger(FormCadastro_Garcons.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblGarconsMouseClicked

    private void btnAlterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterActionPerformed
        int i = JOptionPane.showConfirmDialog(rootPane, ALTERAR_CADASTRO); //"Deseja Realmente Alterar o Cadastro Selecionado?"
        if (i == 0) {
            try {
                UsersDAO gDAO = new UsersDAO();
                Users user = new Users();
                if ((!txtNome.getText().equals("")) && (!txtCpf.getText().equals(""))) {
                    int numero = (int) tblGarcons.getValueAt(tblGarcons.getSelectedRow(), 0);
                    user = gDAO.getEntityById(numero);
                    user.setNome(txtNome.getText());
                    user.setSenha(String.valueOf(txtPass.getPassword()));
                    user.setCPF(txtCpf.getText());
                    gDAO.updateEntity(user);
                }
                Load();
            } catch (SQLException ex) {
                Logger.getLogger(FormCadastro_Garcons.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(FormCadastro_Garcons.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                Load();
            } catch (Exception ex) {
                Logger.getLogger(FormCadastro_Garcons.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAlterActionPerformed

    public void Load() throws SQLException, Exception {

        try {
            UsersDAO gDAO = new UsersDAO();
            List<Users> lstGarcon = gDAO.getAllGarcons(2);
            DefaultTableModel tablemd = (DefaultTableModel) tblGarcons.getModel();
            tablemd.getDataVector().removeAllElements();
            //if exist any User, fill the Jtable
            if (lstGarcon.size() > 0) {
                for (Users Garcon : lstGarcon) {
                    tablemd.addRow(new Object[]{Garcon.getId(), Garcon.getNome(), Garcon.getCPF()});
                }
                //Cleaning any selection
                tblGarcons.clearSelection();
            }
            tblGarcons.updateUI();
            limpar();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ERRO_AT_TABLE);
        }
    }

    public void MoverTable(Users i) {

        try {
            txtPass.setText(i.getSenha());
            txtNome.setText(i.getNome());
            txtCpf.setText(i.getCPF());
        } catch (Exception e) {

        }

    }

    public void limpar() {
        txtNome.setText("");
        txtCpf.setText("");
        txtPass.setText("");
        btnExcluir.setEnabled(false);
        btnAlter.setEnabled(false);
        btnAdd.setEnabled(true);

    }

    public void atualizar() {
        lblCadGarcon.setText(CONSTANTES.m_strTGar);
    }

    private void Translate(String Idioma, String Pais) {

        Locale Us = new Locale(Idioma, Pais);
        Locale.setDefault(Us);

        ResourceBundle propriedades = ResourceBundle.getBundle("Internacionalização/appstrings");
        //aqui traduzindo elementos da janela de cadastro de garçons
        lblCadGarcon.setText(propriedades.getString("jCadGar"));
        lblNome.setText(propriedades.getString("jGarNome"));
        lblCPF.setText(propriedades.getString("jGarCPF"));
        btnAdd.setText(propriedades.getString("AddGar"));
        btnAlter.setText(propriedades.getString("AlterGar"));
        btnExcluir.setText(propriedades.getString("ExGar"));
        lblListaGarc.setText(propriedades.getString("jListaGar"));
              
        Usuario_Sucesso = propriedades.getString("SUCESS_USER");
        Usuario_Duplicado = propriedades.getString("DUPLIC_USER");
        Erro_add_Garc = propriedades.getString("ADD_ERRO");
        Formulario_Principal = propriedades.getString("Main_Form");
        DESEJA_EXCLUIR = propriedades.getString("Want_Delete");
        ALTERAR_CADASTRO = propriedades.getString("Want_alter");
        ERRO_AT_TABLE = propriedades.getString("Erro_table");
        
        tblGarcons.getColumnModel().getColumn(0).setHeaderValue(propriedades.getString("COD"));
        tblGarcons.getColumnModel().getColumn(1).setHeaderValue(propriedades.getString("Name"));
        tblGarcons.getColumnModel().getColumn(2).setHeaderValue(propriedades.getString("CPF"));
        tblGarcons.getTableHeader().repaint();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAlter;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCPF1;
    private javax.swing.JLabel lblCadGarcon;
    private javax.swing.JLabel lblListaGarc;
    private javax.swing.JLabel lblNome;
    private javax.swing.JTable tblGarcons;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtPass;
    // End of variables declaration//GEN-END:variables
}
